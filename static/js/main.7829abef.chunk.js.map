{"version":3,"sources":["store/users/actionTypes.js","store/users/reducer.js","store/index.js","store/store.js","providers/Routes.js","config/firestore.js","services/FSCollection.js","services/Firestore.js","store/users/actions.js","providers/FirestoreProvider.js","services/Utils.js","components/AddressItem/index.js","containers/AddressList/index.js","constants.js","shared/Input/index.js","shared/Button/index.js","containers/NewEditContact/index.js","components/Router/index.js","serviceWorker.js","index.js","shared/Input/index.module.css","containers/NewEditContact/index.module.css","components/AddressItem/index.module.css","shared/Button/index.module.css","containers/AddressList/index.module.css","components/Router/index.module.css"],"names":["GET_USERS","REMOVE_USER","EDIT_USER","ADD_USER","SET_CURRENT","users","state","arguments","length","undefined","action","type","ActionTypes","Object","objectSpread","list","toConsumableArray","filter","user","id","current","assign","handled","map","concat","reducer","combineReducers","history","createBrowserHistory","composeEnhancers","window","compose","logger","createLogger","collapsed","middleware","applyMiddleware","routerMiddleware","Store","createStore","apply","Routes","name","path","FirestoreConfig","apiKey","process","authDomain","projectId","FSCollection","db","_this","this","classCallCheck","getDoc","collection","doc","get","then","querySnapshot","data","deleteDoc","delete","editDoc","updated","set","addDoc","document","add","singleton","Symbol","singletonEnforcer","Firestore","enforcer","getCollection","collectionName","Collection","forEach","push","Error","firebase","USERS","collections","getUsersRequest","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","usersData","_err$response","_err$response$data","_err$response$data$me","message","wrap","_context","prev","next","Instance","sent","dispatch","t0","response","console","error","stop","removeUser","removeUserRequest","_ref2","_callee2","_err$response2","_err$response2$data","_err$response2$data$m","_context2","_x","editUserRequest","_ref3","_callee3","_err$response3","_err$response3$data","_err$response3$data$m","_context3","_x2","addUserRequest","_ref4","_callee4","_err$response4","_err$response4$data","_err$response4$data$m","_context4","_x3","setCurrentUser","searchUserByIdRequest","_ref5","_callee5","_err$response5","_err$response5$data","_err$response5$data$m","_context5","_x4","findComparison","item","search","regExp","obj","RegExp","err","prototype","toString","call","slice","filtered","filterObject","keys","toLocaleString","String","test","toLowerCase","array","entries","slicedToArray","value","reduce","accum","key","defineProperty","AddressItem","react_default","createElement","className","styles","addressItem","Link","to","email","deleteButton","onClick","AddressList","props","possibleConstructorReturn","getPrototypeOf","handleChange","event","_event$target$value","target","filterValue","setState","renderFiltered","_this$state","index","components_AddressItem","_","_this2","addressList","searchBar","placeholder","onChange","e","addButton","Component","defaultProps","connect","validateEmail","Input","_ref$placeholder","_ref$onChange","_ref$id","_ref$value","_ref$onBlur","onBlur","_ref$className","_ref$isValid","isValid","_ref$validateMessage","validateMessage","inputWrapper","input","invalid","Button","_ref$text","text","_ref$dataRole","dataRole","_ref$onClick","_ref$disabled","disabled","Fragment","button","NewEditContact","_e$target","handleSubmit","preventDefault","isNew","deleteUser","validEmail","toDashboard","pathname","location","match","matchPath","exact","strict","userId","params","_ref$current","_this$state2","_this$state3","breadcrumb","Redirect","src","title","newEditContact","onSubmit","shared_Input","buttonsWrapper","shared_Button","leftButton","rightButton","withRouter","Router","page","separator","Switch","Route","component","Boolean","hostname","ReactDOM","render","es","store","BrowserRouter","components_Router","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","save","link"],"mappings":"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","file":"static/js/main.7829abef.chunk.js","sourcesContent":["export const GET_USERS = 'GET_USERS';\nexport const REMOVE_USER = 'REMOVE_USER';\nexport const EDIT_USER = 'EDIT_USER';\nexport const ADD_USER = 'ADD_USER';\nexport const SET_CURRENT = 'SET_CURRENT';\nexport const SEARCH_USER = 'SEARCH_USER';\n","import * as ActionTypes from './actionTypes';\n\nfunction users(state = {}, action) {\n  switch (action.type) {\n    case ActionTypes.GET_USERS:\n      return {\n        ...state,\n        list: action.users,\n      };\n    case ActionTypes.REMOVE_USER:\n      return {\n        ...state,\n        list: [ ...state.list.filter(user => user.id !== action.id) ],\n        current: Object.assign({}, state.current, { handled: true }),\n      };\n    case ActionTypes.EDIT_USER:\n      return {\n        ...state,\n        list: state.list.map(user => user.id === action.user.id\n          ? action.user\n          : user\n        ),\n        current: Object.assign({}, state.current, { handled: true }),\n      };\n    case ActionTypes.ADD_USER:\n      return {\n        ...state,\n        list: [ ...state.list, action.user ],\n        current: Object.assign({}, action.user, { handled: true }),\n      };\n    case ActionTypes.SET_CURRENT:\n      return {\n        ...state,\n        current: Object.assign({}, action.user),\n      };\n    default:\n      return state;\n  }\n}\n\nexport default users;\n","import { combineReducers } from 'redux';\n\nimport users from 'store/users/reducer';\n\nconst reducer = combineReducers({\n  users\n});\n\nexport default reducer;\n","import { applyMiddleware, compose, createStore } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport { routerMiddleware } from 'react-router-redux';\nimport createBrowserHistory from 'history/createBrowserHistory';\n\nimport reducer from './index';\n\nconst history = createBrowserHistory();\n\nconst composeEnhancers = window['__REDUX_DEVTOOLS_EXTENSION_COMPOSE__'] || compose;\n\nconst logger = createLogger({\n  collapsed: true,\n});\n\nconst middleware = [\n  applyMiddleware(routerMiddleware(history)),\n  applyMiddleware(logger),\n];\n\nconst Store = createStore(reducer, composeEnhancers(...middleware));\n\nexport default Store;\n\n","export default {\n  main: {\n    name: 'My Address Book',\n    path: '/',\n  },\n  contacts: {\n    name: 'Contact',\n    path: '/contact',\n  },\n};\n","const FirestoreConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n};\n\nexport default FirestoreConfig;\n","export default class FSCollection {\n  /**\n   * @constructor\n   * @param db {firebase.firestore.Firestore}\n   * @param name {string}\n   */\n  constructor(db, name) {\n    this.collection = db.collection(name);\n  }\n\n  get Collection() {\n    return this.collection;\n  }\n\n  /**\n   * @param id {string}\n   * @returns {Promise<{object}>}\n   */\n  getDoc = (id) => this.collection\n    .doc(id)\n    .get()\n    .then((querySnapshot) => ({ id: querySnapshot.id, ...querySnapshot.data() }));\n\n  /**\n   * @param id {string}\n   * @returns {Promise<void>}\n   */\n  deleteDoc = (id) => this.collection.doc(id).delete();\n\n  /**\n   * @param id {string}\n   * @param updated {object}\n   * @returns {Promise<void>}\n   */\n  editDoc = (id, updated) => this.collection.doc(id).set(updated);\n\n\n  /**\n   * @param document {object}\n   * @returns {Promise<string | never>}\n   */\n  addDoc = (document) => this.collection\n    .add(document)\n    .then((querySnapshot) => querySnapshot.id);\n}\n","import * as firebase from 'firebase';\nimport FirestoreConfig from 'config/firestore';\nimport FSCollection from 'services/FSCollection';\n\nlet singleton = Symbol();\nlet singletonEnforcer = Symbol();\n\nclass Firestore {\n  /**\n   * @private\n   * @param enforcer\n   */\n  constructor(enforcer) {\n    if (enforcer !== singletonEnforcer)\n      throw new Error('Instantiation failed: use Singleton.getInstance() instead of new.');\n    firebase.initializeApp(FirestoreConfig);\n\n    /**\n     * @type {firebase.firestore.Firestore}\n     */\n    this.db = firebase.firestore();\n  }\n\n  /**\n   * @returns {Firestore}\n   * @constructor\n   */\n  static get Instance() {\n    if (!this[singleton])\n      this[singleton] = new Firestore(singletonEnforcer);\n    return this[singleton];\n  }\n\n  /**\n   * @param collectionName {string}\n   * @returns {Promise<Array>}\n   */\n  getCollection = (collectionName) => new FSCollection(this.db, collectionName).Collection\n    .get()\n    .then((querySnapshot) => {\n      const data = [];\n      querySnapshot.forEach((doc) => {\n        data.push({ id: doc.id, ...doc.data() })\n      });\n      return data\n    });\n\n  /**\n   * @param collection {string} - collection name\n   * @param id {string}\n   * @returns {Promise<{object}>}\n   */\n  getDoc = (collection, id) => new FSCollection(this.db, collection).getDoc(id);\n\n  /**\n   * @param collection {string}\n   * @param doc {object}\n   * @returns {Promise<string>}\n   */\n  addDoc = (collection, doc) => new FSCollection(this.db, collection).addDoc(doc);\n\n  /**\n   * @param collection {string} - collection name\n   * @param id {string}\n   * @returns {Promise<{object}>}\n   */\n  deleteDoc = (collection, id) => new FSCollection(this.db, collection).deleteDoc(id);\n\n  /**\n   * @param collection {string} - collection name\n   * @param id {string}\n   * @param doc {object}\n   * @returns {Promise<{object}>}\n   */\n  editDoc = (collection, id, doc) => new FSCollection(this.db, collection).editDoc(id, doc);\n}\n\nexport default Firestore;\n","import Firestore from 'services/Firestore'\nimport FirestoreProvider from 'providers/FirestoreProvider';\nimport * as ActionTypes from './actionTypes';\nimport Store from 'store/store';\n\nconst { collections: { USERS } } = FirestoreProvider;\nexport const getUsers = users => ({\n  type: ActionTypes.GET_USERS,\n  users,\n});\n\n/**\n * @returns {Promise<void>}\n */\nexport const getUsersRequest = async () => {\n  try {\n    const usersData = await Firestore.Instance.getCollection(USERS);\n    Store.dispatch(getUsers(usersData));\n  } catch (err) {\n    const { response: { data: { message = null } = {} } = {} } = err;\n    console.error(message || err);\n  }\n};\n\nexport const removeUser = id => ({\n  type: ActionTypes.REMOVE_USER,\n  id,\n});\n\n/**\n * @param id {string}\n * @returns {Promise<void>}\n */\nexport const removeUserRequest = async (id) => {\n  try {\n    await Firestore.Instance.deleteDoc(USERS, id);\n    Store.dispatch(removeUser(id));\n  } catch (err) {\n    const { response: { data: { message = null } = {} } = {} } = err;\n    console.error(message || err);\n  }\n};\n\nexport const editUser = user => ({\n  type: ActionTypes.EDIT_USER,\n  user,\n});\n\n/**\n * @param data {id, email, name}\n * @returns {Promise<void>}\n */\nexport const editUserRequest = async (data) => {\n  try {\n    await Firestore.Instance.editDoc(USERS, data.id, data);\n    Store.dispatch(editUser(data));\n  } catch (err) {\n    const { response: { data: { message = null } = {} } = {} } = err;\n    console.error(message || err);\n  }\n};\n\nexport const addUser = user => ({\n  type: ActionTypes.ADD_USER,\n  user,\n});\n\n/**\n * @param data {email, name}\n * @returns {Promise<void>}\n */\nexport const addUserRequest = async (data) => {\n  try {\n    const id = await Firestore.Instance.addDoc(USERS, data);\n    Store.dispatch(addUser({ id, ...data }));\n  } catch (err) {\n    const { response: { data: { message = null } = {} } = {} } = err;\n    console.error(message || err);\n  }\n};\n\nexport const setCurrentUser = user => ({\n  type: ActionTypes.SET_CURRENT,\n  user,\n});\n\n/**\n * @param id {string}\n * @returns {Promise<void>}\n */\nexport const searchUserByIdRequest = async (id) => {\n  try {\n    const user = await Firestore.Instance.getDoc(USERS, id);\n    Store.dispatch(setCurrentUser(user));\n  } catch (err) {\n    const { response: { data: { message = null } = {} } = {} } = err;\n    console.error(message || err);\n  }\n};\n\nexport const clearCurrentUser = () => {\n  Store.dispatch(setCurrentUser({}));\n};\n","const FirestoreProvider = {\n  collections: {\n    USERS: 'users',\n  }\n};\n\nexport default FirestoreProvider;\n","/**\n * @param obj {any}\n * @returns {string}\n */\nexport const getType = (obj) => Object.prototype.toString.call(obj).slice(8, -1);\n\nexport const findComparison = (item, search) => {\n  let regExp;\n  try {\n    regExp = new RegExp(search)\n  } catch (err) {\n    return false;\n  }\n  switch (getType(item)) {\n    case 'Array': {\n      return filter(item, search).length !== 0;\n    }\n    case 'Object': {\n      const filtered = filterObject(item, search);\n      return Object.keys(filtered).length !== 0;\n    }\n    case 'Date': {\n      item = item.toLocaleString();\n      break;\n    }\n    default: {\n      item = String(item);\n      break;\n    }\n  }\n  return regExp.test(item.toLowerCase());\n};\n\n/**\n * Doing search by string/regexp in Array\n * @param array {Array}\n * @param search {string | RegExp}\n * @returns {Array}\n */\nexport const filter = (array, search) =>\n  array\n    .filter(item => findComparison(item, search));\n\n/**\n * Doing search by string/regexp in Object\n * @param obj {object}\n * @param search {string | RegExp}\n * @returns {object}\n */\nexport const filterObject = (obj, search) =>\n  Object\n    .entries(obj)\n    .filter(([ key, value ]) => findComparison(value, search))\n    .reduce((accum, [ key, value ]) => Object.assign(accum, { [key]: value }), {});\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { removeUserRequest } from 'store/users/actions'\n\nimport styles from './index.module.css';\n\nconst AddressItem = ({ item }) => (\n  <div className={ styles.addressItem }>\n    <Link to={ `/contact/${ item.id }` } className={ styles.name }>{ item.name }</Link>\n    <p className={ styles.email }>{ item.email }</p>\n    <button className={ styles.deleteButton } onClick={ () => removeUserRequest(item.id) }/>\n  </div>\n);\n\nexport default AddressItem;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom';\nimport { filter } from 'services/Utils';\nimport * as _ from 'lodash';\nimport AddressItem from 'components/AddressItem';\n\nimport styles from './index.module.css';\n\nclass AddressList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      users: props.users,\n      filterValue: '',\n    };\n  }\n\n  handleChange = (event) => {\n    const { target: { value: filterValue = '' } } = event;\n    this.setState({ filterValue });\n  };\n\n  componentWillReceiveProps({ users }) {\n    if (!_.isEqual(users, this.state.users)) {\n      this.setState({ users });\n    }\n  }\n\n  renderFiltered = () => {\n    const { users, filterValue } = this.state;\n    const filtered = filter(users, filterValue);\n    return filtered.map((item, index) => <AddressItem item={ item } key={ index }/>)\n  };\n\n  render() {\n    return (\n      <div className={ styles.addressList }>\n        <input className={ styles.searchBar } placeholder=\"searchbar\" onChange={ (e) => this.handleChange(e) }/>\n        {\n          this.renderFiltered()\n        }\n        <Link to='/contact' className={ styles.addButton }/>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  users: state.users.list\n});\n\nAddressList.defaultProps = {\n  users: [],\n};\n\nexport default connect(mapStateToProps, null)(AddressList);\n","export const validateEmail = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;","import React from 'react';\n\nimport styles from './index.module.css';\n\nconst Input = ({\n  placeholder = '',\n  onChange = () => {},\n  id = '',\n  value = '',\n  onBlur = () => {},\n  className = '',\n  isValid = true,\n  validateMessage = ''\n}) => (\n  <div className={ styles.inputWrapper }>\n    <input\n      className={ `${ styles.input } ${ styles[className] } ${ isValid ? '' : styles.invalid }` }\n      placeholder={ placeholder }\n      onChange={ (e) => onChange(e) }\n      id={ id }\n      value={ value }\n      onBlur={ (e) => onBlur(e) }\n    />\n    { !isValid && <p className={ styles.validateMessage }>{ validateMessage }</p> }\n  </div>\n);\n\nexport default Input;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport styles from './index.module.css';\n\nconst Button = ({\n  text = '',\n  dataRole = '',\n  className = '',\n  onClick = () => {},\n  disabled = false,\n  to\n}) => (\n  <>\n    { dataRole === 'link'\n      ? <Link className={ `${ styles.button } ${ styles[dataRole] } ${ className }` } to={ to }>{ text }</Link>\n      : <button\n        className={ `${ styles.button } ${ styles[dataRole] } ${ className }` }\n        onClick={ (e) => onClick(e) }\n        disabled={ disabled }\n      >\n        { text }\n      </button>\n    }\n\n  </>\n);\n\nexport default Button;\n","import React, { Component } from 'react';\nimport { BreadcrumbsItem } from 'react-breadcrumbs-dynamic';\nimport { matchPath, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router';\nimport * as _ from 'lodash';\nimport Routes from 'providers/Routes';\nimport { validateEmail } from 'constants.js';\nimport Input from 'shared/Input';\nimport Button from 'shared/Button';\nimport {\n  addUserRequest,\n  clearCurrentUser,\n  editUserRequest,\n  removeUserRequest,\n  searchUserByIdRequest,\n} from 'store/users/actions';\n\nimport styles from './index.module.css';\n\nclass NewEditContact extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isNew: false,\n      name: '',\n      email: '',\n      id: '',\n      validEmail: true,\n      toDashboard: false\n    };\n  }\n\n  componentDidMount() {\n    const { location: { pathname } } = this.props;\n\n    const match = matchPath(pathname, {\n      path: '/contact/:id',\n      exact: false,\n      strict: false,\n    });\n\n    if (!match) {\n      this.setState({ isNew: true });\n      return;\n    }\n\n    const { params: { id: userId } } = match;\n    searchUserByIdRequest(userId);\n  }\n\n  componentWillReceiveProps({ current = {} }) {\n    const { id, name, email } = this.state;\n    if (current.handled) {\n      this.setState({ toDashboard: true });\n    } else if (!_.isEqual(current, { id, name, email })) {\n      this.setState({ ...current });\n    }\n  }\n\n  componentWillUnmount() {\n    clearCurrentUser();\n  }\n\n  handleChange = (e) => {\n    const { id, value } = e.target;\n    this.setState({ [id]: value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { isNew, id, name, email } = this.state;\n    isNew ? addUserRequest({ name, email }) : editUserRequest({ id, name, email });\n  };\n\n  deleteUser = (e) => {\n    e.preventDefault();\n    removeUserRequest(this.state.id);\n  };\n\n  validateEmail = () => {\n    const { email } = this.state;\n    const validEmail = validateEmail.test(email.toLowerCase());\n    this.setState({ validEmail })\n  };\n\n  render() {\n    const { isNew, name, email, validEmail, toDashboard } = this.state;\n    const breadcrumb = `${ isNew ? 'New' : 'Edit' } ${ Routes.contacts.name }`;\n\n    return <>\n      {\n        toDashboard && <Redirect to='/'/>\n      }\n      <BreadcrumbsItem className={ styles.title } to={ Routes.contacts.path }>{ breadcrumb }</BreadcrumbsItem>\n      <form className={ styles.newEditContact } onSubmit={ this.handleSubmit }>\n        <Input\n          placeholder=\"Name\"\n          onChange={ this.handleChange }\n          id=\"name\"\n          value={ name }\n        />\n        <Input\n          placeholder=\"Email\"\n          onChange={ this.handleChange }\n          id=\"email\"\n          value={ email }\n          onBlur={ this.validateEmail }\n          isValid={ validEmail }\n          validateMessage=\"Please enter valid email\"\n        />\n        <div className={ styles.buttonsWrapper }>\n          {\n            !isNew &&\n            <Button\n              text='Delete'\n              dataRole='delete'\n              onClick={ this.deleteUser }\n              className={ styles.leftButton }\n            />\n          }\n          <Button\n            text='Cancel'\n            dataRole='link'\n            to={ Routes.main.path }\n          />\n          <Button\n            text='Ok'\n            dataRole='save'\n            className={ styles.rightButton }\n            disabled={ !validEmail }\n          />\n        </div>\n      </form>\n    </>\n  }\n}\n\nconst mapStateToProps = state => ({\n  current: state.users.current,\n});\n\nexport default withRouter(connect(mapStateToProps, null)(NewEditContact));\n","import React, { Component } from 'react';\nimport { Link, Route, Switch } from 'react-router-dom';\nimport { Breadcrumbs, BreadcrumbsItem } from 'react-breadcrumbs-dynamic';\nimport { withRouter } from 'react-router';\nimport Routes from 'providers/Routes';\nimport { getUsersRequest } from 'store/users/actions'\nimport AddressList from 'containers/AddressList';\nimport NewEditContact from 'containers/NewEditContact';\n\nimport styles from './index.module.css';\n\nclass Router extends Component {\n\n  componentDidMount() {\n    getUsersRequest();\n  }\n\n  render() {\n    return (\n      <div className={ styles.page }>\n        <Breadcrumbs separator={ <span> / </span> } item={ Link }/>\n        <BreadcrumbsItem to={ Routes.main.path } className={ styles.title }>{ Routes.main.name }</BreadcrumbsItem>\n        <Switch>\n          <Route exact path={ Routes.main.path } component={ AddressList }/>\n          <Route path={ Routes.contacts.path } component={ NewEditContact }/>\n          <Route path={ `${ Routes.contacts.path }/:id` } component={ NewEditContact }/>\n        </Switch>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(Router);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { BreadcrumbsProvider } from 'react-breadcrumbs-dynamic'\nimport store from 'store/store';\nimport Router from 'components/Router';\nimport * as serviceWorker from './serviceWorker';\n\nimport './index.css';\n\nconst App = () => (\n  <Provider store={ store }>\n    <BreadcrumbsProvider>\n      <BrowserRouter>\n        <Router/>\n      </BrowserRouter>\n    </BreadcrumbsProvider>\n  </Provider>\n);\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputWrapper\":\"Input_inputWrapper__3vmjA\",\"input\":\"Input_input__2JCEG\",\"invalid\":\"Input_invalid__2A6ZG\",\"validateMessage\":\"Input_validateMessage__aW-x-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newEditContact\":\"NewEditContact_newEditContact__2w2Dg\",\"buttonsWrapper\":\"NewEditContact_buttonsWrapper__3qv3N\",\"leftButton\":\"NewEditContact_leftButton__3i3Ki\",\"rightButton\":\"NewEditContact_rightButton__1Hwn8\",\"title\":\"NewEditContact_title__2Bbt7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addressItem\":\"AddressItem_addressItem__1LWWP\",\"name\":\"AddressItem_name__ICuhj\",\"email\":\"AddressItem_email__33c38\",\"deleteButton\":\"AddressItem_deleteButton__2uFdm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__2UARf\",\"delete\":\"Button_delete__3xyY4\",\"save\":\"Button_save__pfKNs\",\"link\":\"Button_link__2sWip\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addressList\":\"AddressList_addressList__UW9jq\",\"addButton\":\"AddressList_addButton__3aV_Z\",\"searchBar\":\"AddressList_searchBar__30Cgr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"Router_page__bEirS\",\"title\":\"Router_title__36YJ2\"};"],"sourceRoot":""}